<apex:page controller="AJAXController" sidebar="false" showHeader="false">

    <apex:includescript value="{!URLFOR($Resource.JQueryzip, 'jquery-ui-1.10.4/js/jquery-1.11.1.js')}"/>
    <apex:includescript value="{!URLFOR($Resource.JQueryzip, 'jquery-ui-1.10.4/js/jquery-ui-1.10.4.js')}"/> 
    <apex:includescript value="{!URLFOR($Resource.datatables, 'DataTables-1.10.0/media/js/jquery.dataTables.js')}"/>
    <apex:includescript value="{!URLFOR($Resource.chosen, 'chosen.jquery.js')}"/>
    <apex:includescript value="{!URLFOR($Resource.datatables, 'DataTables-1.10.0/extensions/KeyTable/js/dataTables.keyTable.js')}"/>
    <apex:includescript value="{!URLFOR($Resource.colreorder2, '')}"/> 
    <apex:includescript value="/support/console/31.0/integration.js"/>
    <!-- Bootstrap -->
    <apex:includescript value="{!URLFOR($Resource.bootstrap, 'bootstrap-3.2.0-dist/js/bootstrap.js')}"/>
   	<!-- DataTables for Bootstrap -->
   	<apex:includescript value="//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.js"/>
    <apex:stylesheet value="//cdn.datatables.net/plug-ins/725b2a2115b/integration/bootstrap/3/dataTables.bootstrap.css"/>
   
    <apex:stylesheet value="//code.jquery.com/ui/1.10.3/themes/redmond/jquery-ui.css"/>
    <script type="text/javascript" src="https://www.google.com/jsapi"></script>
    
    <apex:stylesheet value="{!URLFOR($Resource.chosen, 'chosen.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.datatables, 'DataTables-1.10.0/extensions/KeyTable/css/dataTables.keyTable.css')}"/>
    <apex:stylesheet value="{!URLFOR($Resource.datatables, 'DataTables-1.10.0/extensions/ColReorder/css/dataTables.colReorder.css')}"/>
    
    <!-- Bootstrap -->
	<apex:stylesheet value="{!URLFOR($Resource.bootstrap, 'bootstrap-3.2.0-dist/css/bootstrap.css')}"/>
	<!-- Optional Bootstrap Theme -->
	<apex:stylesheet value="{!URLFOR($Resource.bootstrap, 'bootstrap-3.2.0-dist/css/bootstrap-theme.css')}"/>

     <meta name="viewport" content="width=device-width, initial-scale=1"/>
	    	          
        <!-- utilities --> 
        <apex:form >  
            <apex:actionFunction name="redirect" action="{!getPageRef}" rerender="">
                <apex:param name="firstParam" assignTo="{!objId}" value="" />
                <apex:param name="secondParam" assignTo="{!objType}" value="" />
            </apex:actionFunction>
            
            <apex:actionFunction name="startUnassignedCase" action="{!findNextCaseUnassigned}" rerender=""/>
            
            <apex:actionFunction name="checkIn" action="{!checkUserIn}" rerender=""/>
            <apex:actionFunction name="checkOut" action="{!checkUserOut}" rerender=""/>

        </apex:form>
        
	    <div id="dialog" title="Refreshing ProActive">
	        <div class="progress-label">Refreshing...</div>
	        <div id="progressbar" class=""></div>
	    </div>
	
	    <div class="navbar navbar-inverse navbar-fixed-top">
		    <div class="container">
		    
		        <div class="navbar-header">
		          <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
		            <span class="sr-only">Toggle navigation</span>
		            <span class="icon-bar"></span>
		            <span class="icon-bar"></span>
		            <span class="icon-bar"></span>
		          </button>
		          <a class="navbar-brand" href="#">ProActive</a>
		        </div>
		        
		        <div class="collapse navbar-collapse">
		          <ul class="nav navbar-nav">
		            <li class="active"><a href="#">Home</a></li>
		            <li><a href="#about">About</a></li>
		            <li><a href="#contact">Contact</a></li>
		          </ul>
		        </div><!--/.nav-collapse -->
		      </div>
	    </div>

    	<div class="container-fluid" style="padding-top:55px">	
		    <div class="row" style="text-align:center; margin:2%;" id="main">
		        
				<div class="row">
	                <div class="col-xs-6 pull-left" id="chart_div4"></div>
	                <div class="col-xs-4 pull-right" style="padding-top:20px; padding-left:40px;">
	                	<!-- <a class="btn-lg btn-success btn-block" href="" id="checkin_button" style="text-align:center; width: 220px;">Available</a> -->
	                	<button type="button" class="btn btn-lg btn-success btn-block" id="test_checkin_button" style="text-align:center; width: 220px;">Available</button>
	                	<a class="btn-lg btn-danger btn-block" href="" id="checkout_button" style="text-align:center; width: 220px;'">Unavailable</a>
	                </div>
	            </div>
	            
		        <div id="content" style="margin:2%;">
		        
					<div class="row">
					
		                <div class="" style="padding-left:20px;">
		                
		                	<select class="" style="width:180px; text-align:center;" data-placeholder="Filter cases by..." id="selection">
		                        <option value="mycases_sel">My Cases</option>
		                        <option value="unassigned_sel">Unassigned Cases</option>
		                        <option value="allcases_sel">All Cases</option>
		                	</select> 
		                	 
		                	<a href="" id="newca_button" class="btn-sm btn-primary">New Case</a>
		                	<!-- /500/e?retURL=apex/Launchpad_datatable?sfdc.tabName=01re0000000D3g7 -->
		                	<a href="" id="start_button" class="btn-sm btn-primary">Start an unassigned case</a>
		                </div>
		                
	                </div> <!-- Buttons div row (Select menu (filter), New Case btn, Start new case btn) -->
	              
		            <!-- Relevant lists -->
                    <table title="Case List" class="table table-bordered table-hover table-striped table-condensed" id="tblid">
                        <thead>
                        	<tr>
                               <th></th>
                               <th>Source</th> <!-- 1 -->
                               <th>Priority</th> <!-- 2 -->
                               <th>Account ID</th> <!-- 3 -->
                               <th>Customer Name</th> <!-- 4 -->
                               <th>Note</th> 
                               <th>CC Date</th> 
                               <th>Owner</th> 
                               <th>Status</th>
                               <th>Hours</th> 
                               <th>Owner Name</th> <!-- 11 -->
                               <th>Case Number</th>  
                               <th>Description</th> 
                               <th>OwnerId</th> <!-- 16 -->
                               <th>Age</th>
                               <th>ContactId</th>
                               <th>CC ID</th>
                            </tr>
                        </thead>
                        <tfoot>
                        	<tr>
                               <th></th>
                               <th>Source</th> <!-- 1 -->
                               <th>Priority</th> <!-- 2 -->
                               <th>Account ID</th> <!-- 3 -->
                               <th>Customer Name</th> <!-- 4 -->
                               <th>Note</th> 
                               <th>CC Date</th> 
                               <th>Owner</th> 
                               <th>Status</th>
                               <th>Hours</th> 
                               <th>Owner Name</th> <!-- 11 -->
                               <th>Case Number</th>  
                               <th>Description</th> 
                               <th>OwnerId</th> <!-- 16 -->
                               <th>Age</th>
                               <th>ContactId</th>
                               <th>CC ID</th>
                            </tr>
                        </tfoot>
                        <tbody></tbody>
                    </table>    			        			        
			    </div>
    		</div>
    	</div>
    	
    	
	<style>
	    .buttonAvailableState {
	        background: #74BF79;
	        color:black;
	        opacity: 1.0;
	        cursor: pointer;
	    }
	    
	    .buttonUnavailableState {
	        background: #FF9999;
	        color:black;
	        opacity: 1.0;
	        cursor: pointer;
	    }
	    
	    .buttonGrayedOutState {
	        background: #DADADA;
	        color: black;
	        cursor: not-allowed;
	    }

	    td.details-control {
	        background: url('{!URLFOR($Resource.detailsopen, '')}') no-repeat center center;
	        cursor: pointer;
	    }
	    tr.shown td.details-control {
	        background: url('{!URLFOR($Resource.detailsclose, '')}') no-repeat center center;
	    }
	    
	    #progressbar {
	        margin-top: 20px;
	    }
	    .progress-label {
	        font-weight: bold;
	        text-shadow: 1px 1px 0 #fff;
	    }
	    .ui-dialog-titlebar-close {
	        display: none;
	    }
	    
	</style>
	
	<script>
		/* Replace "$." with "$j." to call JQuery API
	     * so it doesn't conflict with Salesforce
	     */
	    $j = jQuery.noConflict();
	    
	    /*
	     * Runs once the page is loaded
	     */
	    $j(document).ready(function() {     
	        
	        var table = $j('#tblid'); // #tblid is the id of the Case table
	        
	        // Reskin the select view dropdown and add event listeners to filter the case table
	        // to what the user chooses
	        $j('#selection').chosen({disable_search_threshold: 10}).on('change', function() {
	            
	            // Clear filters and apply a filter on column 13 (OwnerID) 
	            if (this.value == 'mycases_sel') {
	                table.DataTable().columns().search(''); // clear filters
	                table.DataTable().column(13).search('{!userName}').draw(); 
	            }
	            
	            // Clear filters and apply a filter on column 8 (Status)
	            else if (this.value == 'unassigned_sel') {
	                table.DataTable().columns().search(''); // clear filters
	                table.DataTable().column(8).search('Unassigned').draw();
	            }
	            
	            else if (this.value == 'allcases_sel') {
	                table.DataTable().columns().search('').draw(); // clear filters
	            }
	        });
	        
	        // Readjust columns to use maximum space, then redraw the chart
	        function redrawTable() {
	            table.DataTable().columns.adjust().draw(false);
	        }
	        
	        // Change the default pointer to a hand
	        $j('#tblid').css( 'cursor', 'pointer' );
	        
	        table.dataTable({
	            "columns": [ { // column 0
	                "class":          'details-control',
	                "orderable":      false,
	                "data":           null,
	                "defaultContent": ''
	            },
	            { "data": "Source" }, // column 1
	            { "data": "Priority" }, // column 2
	            { "data": "AccountID" },
	            { "data": "Cust_Name" },
	            { "data": "Note" },
	            { "data": "CR_Date" }, // column 6
	            { "data": "Owner_Name" },
	            { "data": "Status" }, // column 8
	            { "data": "CaseAge" },
	            { "data": "Cont_Email" },
	            { "data": "CaseNumber" },
	            { "data": "Description" },
	            { "data": "OwnerId" }, // column 13
	            { "data": "Cont_Phone" },
	            { "data": "ContactId" },
	            { "data": "CC_ID" }
	            ],
	            "columnDefs": [{ // Sets visibility of columns in "targets"
	                "targets": [ 10,11,12,13,14,15, 16 ], 
	                "visible": false
	            }],
	            "lengthMenu": [[ 10, 25, 50, 100, 250, 500, -1 ], [ 10, 25, 50, 100, 250, 500, "All" ]], // Sets the available "Show X entries" options
	            "scrollY":        280, // Set the height of the table to 450, scroll vertically when appropriate
	            "scrollCollapse":  false, // Don't collapse the table to the contents
	            "Processing"   : true, // Do the processing client-side
	            "jQueryUI":     false, // Use the JQuery themeroller to style the table
	            "pagingType":   "simple",  // Set the paging options to show "Previous" "Next" and page numbers
	            "ServerSide"   : false, // Don't do serverside processing
	            "order": [[2, 'asc'],[6, 'asc']], // Initialize the table with columns 2 (priority) and 6 (CR_Date) sorted
	            "ajax"   : '{!$Page.AjaxResponder}' // Source of the JSON
	        } );
	        
	        // Initialize ColReorder on table1 to allow reordering the columns
	        var table1_reorder = new $j.fn.dataTable.ColReorder( table.DataTable() );
	        
	        // Initialize table to show 100 items
	        table.DataTable().page.len(100).draw();
	        
	        // Filter table to only show the user's cases
	        table.DataTable().column(13).search('{!userName}').draw();
	        
	        // Initialize KeyTable on the case table
	        var keys_table1 = new $j.fn.dataTable.KeyTable( table.DataTable() );
	        
	        // Runs when enter is pressed, navigate to the selected case if not on the first column
	        // Otherwise, expand/collapse the child rows
	        keys_table1.event.action(null, null,
	            function(node, x, y) { // "node" is the currently selected cell
	                if (x > 0) {
	                    // Redirect the user to the currently selected case's detail page
	                    // Calls the apex:ActionFunction "redirect" which returns a PageReference to the case detail page
	                    redirect(table.DataTable().row(y).data().CaseNumber, 'Case'); 
	                }
	                else {
	                    var tr = $j(node).closest('tr');
	                    var row = table.DataTable().row( tr );
	                    
	                    if ( row.child.isShown() ) {
	                        // This row is already open - close it
	                        row.child.hide();
	                        tr.removeClass('shown');
	                    }
	                    else {
	                        // Open this row
	                        row.child( format(row.data()) ).show();
	                        tr.addClass('shown');
	                    }   
	                }
	            }
	        );
	        
	        // Add event listener for opening and closing details
	        $j('#tblid tbody').on('click', 'td.details-control', function () {
	            var tr = $j(this).closest('tr');
	            var row = table.DataTable().row( tr );
	            
	            if ( row.child.isShown() ) {
	                // This row is already open - close it
	                row.child.hide();
	                tr.removeClass('shown');
	            }
	            else {
	                // Open this row
	                row.child( format(row.data()) ).show();
	                tr.addClass('shown');
	            }
	            // Attach jQuery UI classes to the new button
	            addButtonClasses(row.data());
	        } );    
	        
	        // Double click redirects the user to the case detail page
	        $j('#tblid tbody').on( 'dblclick', 'tr', function () {
	            
	            //srcUp('/'+table.DataTable().row(this).data().Id+'?isdtp=vw');
	            //srcSelf('/'+table.DataTable().row(this).data().Id+'?isdtp=vw');
	            //sforce.console.openSubtab('/'+table.DataTable().row(this).data().Id+'?isdtp=vw', Bootstrap);
	            //testOpenPrimaryTab();
	            // Calls the apex:ActionFunction "redirect" which returns a PageReference to the case detail page
	            //redirect(table.DataTable().row(this).data().CaseNumber, 'Case');
	            sforce.console.openPrimaryTab(null, '/'+table.DataTable().row(this).data().Id+'?isdtp=vw', true, 'Case '+table.DataTable().row(this).data().CaseNumber);
	            //sforce.console.openSubtab(sforce.console.getFocusedPrimaryTabId(), '/'+table.DataTable().row(this).data().Id+'?isdtp=vw', true, 'Loading...', null, null);
	            
	        } );

	        // Enables hover/click functionality for the buttons
	        function addButtonClasses(d) {

	            button = $j('#button2');
	            
	            button.on('click', function() {
	            	//console.log(d.Id);
	            	sforce.console.openPrimaryTab(null, '/OOU/e?who_id='+d.ContactId+'&what_id='+d.Id+'?isdtp=vw', true, 'New Event');
	            });
	        }
              
	        // Create New Case button and add hover/click UI events
	        
	        //var newcabutton = $j('#newca_button');
	        
	        // Create Start new unassigned case button and add hover/click UI events
	        var button = $j('#start_button');
	       
	        // Pull the user's status from the page controller and disable/enable the start new unassigned case button
	        // button.button("option", "disabled", !{!userStatus});
	        if(!{!userStatus}) {
	        	button.addClass('disabled');
	        }
	        
	        
	        //Define a click action for the start button
	        button.on('click', function() {
	            // Run the apex:ActionFunction "startUnassignedCase" 
	            startUnassignedCase();
	        });
	        
	        /* Progressbar info
	         * @variables:
	         *      progressTimer: Used to keep track of the completed percentage of the progress bar
	         *      progressBar: A jQuery UI progressBar element
	         *      progressLabel: Text informing the user of the value of the progressTimer
	         *      dialogButtons: Gives the user the option to close the dialog after completion
	         *      dialog: The popup container that holds the progressBar, progressLabel and dialogButtons
	         */
	        var progressTimer, 
	            progressBar = $j('#progressbar'),
	            progressLabel = $j('.progress-label'),
	            dialogButtons = [], // no buttons needed initially
	            dialog = $j('#dialog').dialog({
	                autoOpen: false,
	                closeOnEscape: false,
	                resizable: false,
	                open: function() { // runs when the dialog is opened
	                    progressTimer = setTimeout(progress, 2500); // 2 sec delay, then run function() progress
	                }
	            });
	        
	        progressBar.progressbar({
	            value: false,
	            change: function() {
	                progressLabel.text("Current Progress: " + progressBar.progressbar( 'value' ) + "%" );
	            },
	            complete: function() {
	                progressLabel.text("Done!");
	                dialog.dialog("option", "buttons", [{
	                    text: "Close",
	                    click: closeDownload
	                }]);
	                $j('.ui-dialog button').last().focus();
	            }
	        });
	        
	        function progress() {
	            var val = progressBar.progressbar("value") || 0;
	            
	            progressBar.progressbar("value", val+1);
	            
	            if (val <= 99) {
	                progresstimer = setTimeout(progress, 100);
	            }
	        }  
	        
	        function closeDownload() {
	            clearTimeout(progressTimer);
	            dialog
	                .dialog("option", "buttons", dialogButtons)
	                .dialog("close");
	            progressBar.progressbar("value", false);
	            progressLabel.text("Loading tables..");
	            
	            $j('#tblid').DataTable().ajax.reload(function() {}, true);
	            
	            if(avail_lastClicked) {
	            	unavail_btn.removeClass("disabled");
	            }
	            else {
	            	avail_btn.removeClass("disabled");
	            }
	            
	            //avail_btn.button("option", "disabled", avail_lastclicked);
	            //unavail_btn.button("option", "disabled", unavail_lastclicked);
	            //button.button("option", "disabled", unavail_lastclicked);
	        }
	        
	        var avail_btn = $j('#checkin_button');
	        
	        var avail_lastclicked = {!userStatus};
	        var unavail_lastclicked = !{!userStatus};
	        
	        //avail_btn.button({label: "Available"});
	        //if ({!userStatus} == true) setStatusButtonAsAvailable();
	        //else setStatusButtonAsUnavailable();
	        
	        //avail_btn.button("option", "disabled", {!userStatus});
	        
	        avail_btn.on('click', function() {
	            checkIn();
	            avail_btn.addClass('buttonAvailableState');
	            avail_btn.removeClass('buttonGrayedOutState');
	            //avail_btn.button({label: "You are Available"});
	            //unavail_btn.button({label: "Become Unavailable"});
	            unavail_btn.removeClass('buttonUnavailableState');
	            unavail_btn.addClass('buttonGrayedOutState');
	            avail_lastclicked = true;
	            unavail_lastclicked = false;
	            //setTimeout("$j('#tblid').DataTable().ajax.reload(function() { alert('Successfully checked in!') }, false)", 6000);
	            //avail_btn.button("option", "disabled", true);
	            avail_btn.addClass("disabled");
	            unavail_btn.addClass("disabled");
	            //unavail_btn.button("option", "disabled", true);
	            //button.button("option", "disabled", true);
	            dialog.dialog("open");
	        });     
	        
	        var unavail_btn = $j('#checkout_button');
	        
	        //unavail_btn.button({label: "Unavailable"});
	        
	        //unavail_btn.button("option", "disabled", !{!userStatus});
	      
	        unavail_btn.on('click', function() {
	            checkOut();
	            avail_btn.removeClass('buttonAvailableState');
	            avail_btn.addClass('buttonGrayedOutState');
	            unavail_btn.addClass('buttonUnavailableState');
	            unavail_btn.removeClass('buttonGrayedOutState');
	            //avail_btn.button({label: "Become Available"});
	            //unavail_btn.button({label: "You are Unavailable"});
	            avail_lastclicked = false;
	            unavail_lastclicked = true;
	            //setTimeout("$j('#tblid').DataTable().ajax.reload(function() { alert('Successfully checked out!') }, false)", 6000);
	            //avail_btn.button("option", "disabled", true);
	            avail_btn.addClass("disabled");
	            unavail_btn.addClass("disabled");
	            //unavail_btn.button("option", "disabled", true);
	            //button.button("option", "disabled", true);
	            dialog.dialog("open");
	        });
	        
	        if (!{!userStatus}) {
	            //unavail_btn.button({label: "You are Unavailable"});
	            //avail_btn.button({label: "Become Available"});
	            avail_btn.removeClass('buttonAvailableState');
	            avail_btn.addClass('buttonGrayedOutState');
	            avail_btn.addClass('disabled');
	            unavail_btn.addClass('buttonUnavailableState');
	        }
	        
	        else {
	            //avail_btn.button({label: "You are Available"});
	            //unavail_btn.button({label: "Become unavailable"});
	            avail_btn.addClass('buttonAvailableState');
	            unavail_btn.removeClass('buttonUnavailableState');
	            unavail_btn.addClass('buttonGrayedOutState');
	            unavail_btn.addClass('disabled');
	        }
	        
	        /* Formatting function for row details
	         * Adds child rows to the case table
	         */
	        function format ( d ) {
	            var t_URL = 'https://cs15.salesforce.com/00T/e?'+'who_id='+d.v+'&what_id='+d.Id+'&retURL=apex/Launchpad_datatable?sfdc.tabName=01re0000000D3g7';
	            var e_URL = 'https://cs15.salesforce.com/00U/e?'+'who_id='+d.ContactId+'&what_id='+d.Id+'&retURL=apex/Launchpad_datatable?sfdc.tabName=01re0000000D3g7';
	            
	            // Call an action function here to update CRT Review DT field
	            // setCaseStatus(d.Id);
	            
	            // `d` is the original data object for the row
	            return '<table cellpadding="5" cellspacing="0" border="0" style="padding-left:50px;">'+
	                '<tr>'+
	                    '<td>Phone:</td>'+
	                    '<td>'+d.Cont_Phone+'</td>'+
	                '</tr>'+
	                '<tr>'+
	                    '<td>Email:</td>'+
	                    '<td>'+d.Cont_Email+'</td>'+
	                '</tr>'+
	                '<tr>'+
	                    '<td>Description:</td>'+
	                    '<td>'+d.Description+'</td>'+
	                '</tr>'+
	                '<tr>'+
	                    '<td></td>'+
	                    '<td>'+
	                        '<button id="button2" style="height:25px; width:100px" class="btn-primary btn-small">New Event</button>'+
	                    '</td>'+
	                '</tr>'+
	            '</table>';
	        }
	        //href='+e_URL+'
	        
	        // Variables
	        var objMain = $j('#main');

	        /** Refreshes the Case table every 120 seconds
	         */
	        setInterval( function () {
	                table.DataTable().ajax.reload('', false);
	        }, 120000 );
	        
	        $j(window).resize( function () {
            	redrawTable();
       		} );
	        
	      }); // end jquery
	    
	      google.load("visualization", "1", {packages:["corechart"]});
	      google.setOnLoadCallback(drawChart4);
	      
	      function drawChart4() {
	        var data = google.visualization.arrayToDataTable({!JSONString_CaseChart});
	        
	        var view = new google.visualization.DataView(data);
	        view.setColumns([0, 1, 2, {
	            type: 'long',
	            calc: function (dt, row) {
	                // set offset to determine how far you want to move the labels
	                var offset = 300;
	                return dt.getValue(row, 1) + dt.getValue(row, 2) + offset;
	            }
	        }], 5);
	        
	        var options = {
	            height: 150,
	            legend: { position: "top" },
	            colors: ['#74BF79', /*'#FFFF66'*/'#FAEF87', '#FF9999'],
	            bar: { groupWidth: '97%' },
	            annotations: {
	                textStyle: {
	                    fontSize: 14,
	                    bold: true,
	                    italic: true,
	                    color: 'black'
	                }
	            },
	            isStacked: true,
	            backgroundColor: {fill: 'white'},
	            hAxis: {title: '',
	                    viewWindow: {max: 100},
	                    ticks: [],
	                    baselineColor: 'white',
	                    baseline: '-1'
	                    }
	        };
	   
	        var chart = new google.visualization.BarChart(document.getElementById('chart_div4'));
	        chart.draw(data, options);
	      }
	      
	</script>
</apex:page>